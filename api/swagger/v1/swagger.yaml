---
openapi: 3.0.1
info:
  title: API V1
  version: v1
  description: API Documentation for Location Management System
components:
  schemas:
    Location:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        stripe_id:
          type: string
        address_line1:
          type: string
        address_line2:
          type: string
          nullable: true
        city:
          type: string
        state:
          type: string
        postal_code:
          type: string
        country:
          type: string
        created_at:
          type: string
          format: datetime
        updated_at:
          type: string
          format: datetime
      required:
      - id
      - name
      - stripe_id
      - address_line1
      - city
      - state
      - postal_code
      - country
    LocationInput:
      type: object
      properties:
        name:
          type: string
        address_line1:
          type: string
        address_line2:
          type: string
          nullable: true
        city:
          type: string
        state:
          type: string
        postal_code:
          type: string
        country:
          type: string
      required:
      - name
      - address_line1
      - city
      - state
      - postal_code
      - country
    User:
      type: object
      properties:
        email:
          type: string
        created_at:
          type: string
          format: datetime
        updated_at:
          type: string
          format: datetime
    UserInput:
      type: object
      properties:
        email:
          type: string
        password:
          type: string
        password_confirmation:
          type: string
        merchant_attributes:
          type: object
          properties:
            first_name:
              type: string
            last_name:
              type: string
      required:
      - email
      - password
      - password_confirmation
      - merchant_attributes
    Error:
      type: object
      properties:
        error:
          type: string
        status:
          type: integer
    SuccessResponse:
      type: object
      properties:
        status:
          type: object
          properties:
            code:
              type: integer
            message:
              type: string
        data:
          type: object
  securitySchemes:
    Bearer:
      description: JWT token authentication
      type: http
      scheme: bearer
      bearerFormat: JWT
servers:
- url: http://{defaultHost}
  variables:
    defaultHost:
      default: localhost:4000
tags:
- name: Authentication
  description: User authentication endpoints
- name: Products
  description: Product management endpoints
- name: Stripe Terminal
  description: Stripe Terminal integration endpoints
paths:
  "/api/products":
    get:
      summary: Lists all products
      tags:
      - Products
      security:
      - bearer: []
      parameters:
      - name: page
        in: query
        required: false
        description: Page number
        schema:
          type: integer
      - name: per_page
        in: query
        required: false
        description: Items per page
        schema:
          type: integer
      responses:
        '200':
          description: products found
        '401':
          description: unauthorized
    post:
      summary: Creates a product
      tags:
      - Products
      security:
      - bearer: []
      parameters: []
      responses:
        '201':
          description: product created
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  name:
                    type: string
                  price:
                    type: integer
                  created_at:
                    type: string
                    format: date-time
                  updated_at:
                    type: string
                    format: date-time
        '401':
          description: unauthorized
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                price:
                  type: integer
              required:
              - name
              - price
  "/api/products/{id}":
    parameters:
    - name: id
      in: path
      required: true
      schema:
        type: integer
    get:
      summary: Retrieves a product
      tags:
      - Products
      security:
      - bearer: []
      responses:
        '200':
          description: product found
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  name:
                    type: string
                  price:
                    type: integer
                  created_at:
                    type: string
                    format: date-time
                  updated_at:
                    type: string
                    format: date-time
        '401':
          description: unauthorized
    put:
      summary: Updates a product
      tags:
      - Products
      security:
      - bearer: []
      parameters: []
      responses:
        '200':
          description: product updated
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  name:
                    type: string
                  price:
                    type: integer
                  created_at:
                    type: string
                    format: date-time
                  updated_at:
                    type: string
                    format: date-time
        '401':
          description: unauthorized
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                price:
                  type: integer
    delete:
      summary: Deletes a product
      tags:
      - Products
      security:
      - bearer: []
      responses:
        '204':
          description: product deleted
        '401':
          description: unauthorized
  "/api/signup":
    post:
      summary: Creates a user account
      tags:
      - Authentication
      parameters: []
      responses:
        '200':
          description: user created
        '422':
          description: invalid request
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user:
                  type: object
                  properties:
                    email:
                      type: string
                    password:
                      type: string
                    password_confirmation:
                      type: string
                    merchant_attributes:
                      type: object
                      properties:
                        first_name:
                          type: string
                        last_name:
                          type: string
                  required:
                  - email
                  - password
                  - password_confirmation
                  - merchant_attributes
              required:
              - user
  "/api/login":
    post:
      summary: Creates a session (login)
      tags:
      - Authentication
      parameters: []
      responses:
        '200':
          description: user logged in
        '401':
          description: invalid credentials
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user:
                  type: object
                  properties:
                    email:
                      type: string
                    password:
                      type: string
                  required:
                  - email
                  - password
              required:
              - user
  "/api/logout":
    delete:
      summary: Ends the session (logout)
      tags:
      - Authentication
      security:
      - Bearer: []
      parameters:
      - name: Authorization
        in: header
        required: true
        schema:
          type: string
      responses:
        '200':
          description: logged out successfully
        '401':
          description: unauthorized
  "/api/stripe/terminal/connection_token":
    post:
      summary: Creates a connection token for Stripe Terminal
      tags:
      - Stripe Terminal
      security:
      - Bearer: []
      description: "Creates a connection token for Stripe Terminal. Requires authentication.
        \n                  To test: First call POST /api/login with valid credentials
        to get a token,\n                  then click \"Authorize\" at the top of
        this page and enter that token."
      responses:
        '200':
          description: connection token generated
          content:
            application/json:
              schema:
                type: object
                properties:
                  secret:
                    type: string
                required:
                - secret
        '400':
          description: stripe error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                required:
                - error
        '401':
          description: unauthorized
